// Copyright (c) 2023 S44, LLC
// Copyright Contributors to the CitrineOS Project
//
// SPDX-License-Identifier: Apache 2.0

import { ComponentType, CustomDataType, Namespace, VariableCharacteristicsType, VariableType } from "@citrineos/base";
import { BelongsToMany, Column, DataType, HasMany, HasOne, Model, Table } from "sequelize-typescript";
import { Component } from "./Component";
import { VariableAttribute } from "./VariableAttribute";
import { VariableCharacteristics } from "./VariableCharacteristics";
import { ComponentVariable } from "./ComponentVariable";

@Table
export class Variable extends Model implements VariableType {

    static readonly MODEL_NAME: string = Namespace.VariableType;

    declare customData?: CustomDataType;

    /**
      * Fields
      */

    @Column({
        type: DataType.STRING,
        unique: 'name_instance'
    })
    declare name: string;

    @Column({
        type: DataType.STRING,
        unique: 'name_instance'
    })
    declare instance?: string;

    /**
     * Relations
     */

    @BelongsToMany(() => Component, () => ComponentVariable)
    declare components?: ComponentType[];

    @HasMany(() => VariableAttribute)
    declare variableAttributes?: VariableAttribute[];

    @HasOne(() => VariableCharacteristics)
    declare variableCharacteristics?: VariableCharacteristicsType;

    // Declare the association methods, to be automatically generated by Sequelize at runtime
    public addComponent!: (variable: Component) => Promise<void>;
    public getComponents!: () => Promise<Component[]>;
}